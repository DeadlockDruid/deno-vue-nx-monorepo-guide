name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install required Deno version
      - uses: denoland/setup-deno@v2
        with:
          deno-version: 2.1.4

      # Cache Deno dependencies
      - name: Cache Deno Dependencies
        uses: actions/cache@v4
        env:
          DENO_DIR: ~/.cache/deno
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json', '**/deno.lock') }}

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - run: yarn install --immutable
      - uses: nrwl/nx-set-shas@v4

      # Show affected projects for easier debugging and monitoring
      - name: Show Affected Projects
        run: |
          echo "Fetching affected projects..."
          yarn nx show projects --affected

      # Run lint, test, and build for affected projects
      - name: Lint, Test, and Build Affected Projects
        run: |
          yarn nx affected --targets=lint,test,build --verbose

      # Install Azure Static Web Apps CLI
      - name: Install SWA CLI
        run: |
          npm install -g @azure/static-web-apps-cli

      # Pre-download StaticSitesClient binary
      - name: Dry running to ensure StaticSitesClient binary is downloaded before actual deployment triggers to avoid failures
        run: |
          swa deploy --dry-run --deployment-token=${{ secrets.DEPLOY_TOKEN_VUE_APP_1 }} || true

      # Deploy affected projects only if previous steps succeed
      - name: Deploy Affected Projects
        if: success()
        env:
          DEPLOY_TOKEN_VUE_APP_1: ${{ secrets.DEPLOY_TOKEN_VUE_APP_1 }}
          DEPLOY_TOKEN_VUE_APP_2: ${{ secrets.DEPLOY_TOKEN_VUE_APP_2 }}
        run: |
          yarn nx affected --targets=deploy --verbose
